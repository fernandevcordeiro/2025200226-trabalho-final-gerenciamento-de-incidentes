# Generated by Django 5.1.7 on 2025-03-12 22:45

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="IncidentRecord",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("new", "New"),
                            ("assigned", "Assigned"),
                            ("in_progress", "In Progress"),
                            ("on_hold", "On Hold"),
                            ("resolved", "Resolved"),
                            ("closed", "Closed"),
                            ("canceled", "Canceled"),
                        ],
                        default="new",
                        max_length=20,
                    ),
                ),
                ("description", models.TextField()),
                ("short_description", models.CharField(max_length=255)),
                ("created_date", models.DateTimeField(auto_now_add=True)),
                ("updated_date", models.DateTimeField(auto_now=True)),
                ("deleted_date", models.DateTimeField(blank=True, null=True)),
                ("active", models.BooleanField(default=True)),
                (
                    "impact",
                    models.IntegerField(
                        choices=[(1, "High"), (2, "Medium"), (3, "Low")]
                    ),
                ),
                (
                    "urgency",
                    models.IntegerField(
                        choices=[(1, "High"), (2, "Medium"), (3, "Low")]
                    ),
                ),
                (
                    "priority",
                    models.IntegerField(
                        choices=[(1, "High"), (2, "Medium"), (3, "Low")]
                    ),
                ),
                (
                    "channel",
                    models.CharField(
                        choices=[
                            ("event", "Event"),
                            ("email", "Email"),
                            ("phone", "Phone"),
                            ("self_service", "Self-service"),
                            ("chat", "Chat"),
                        ],
                        max_length=20,
                    ),
                ),
                (
                    "category",
                    models.CharField(
                        choices=[
                            ("access_account", "Access/Account"),
                            ("client_application", "Client Application"),
                            ("data", "Data"),
                            ("event_management", "Event Management"),
                            ("hardware", "Hardware"),
                            ("inquiry_help", "Inquiry/Help"),
                            ("licenses_certificates", "Licenses & Certificates"),
                            ("network", "Network"),
                            ("security", "Security"),
                            ("software", "Software"),
                        ],
                        max_length=50,
                    ),
                ),
                (
                    "impacted_item",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                ("owner_item", models.CharField(blank=True, max_length=255, null=True)),
                (
                    "environment",
                    models.CharField(
                        choices=[
                            ("production", "Production"),
                            ("qa", "QA"),
                            ("staging", "Staging"),
                            ("development", "Development"),
                            ("sandbox", "Sandbox"),
                            ("testing", "Testing"),
                            ("uat", "UAT"),
                        ],
                        max_length=20,
                    ),
                ),
                (
                    "assignment_group",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("support_team", "Support Team"),
                            ("development_team", "Development Team"),
                            ("devops_team", "DevOps Team"),
                        ],
                        max_length=30,
                        null=True,
                    ),
                ),
                (
                    "on_hold_reasons",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("awaiting_info", "Awaiting Additional Information"),
                            (
                                "third_party_dependency",
                                "Dependency on Third Parties/Other Teams",
                            ),
                            ("maintenance_window", "Maintenance Window Needed"),
                            ("awaiting_approval", "Awaiting Approval"),
                            ("issue_stopped", "Issue Has Stopped Occurring"),
                        ],
                        max_length=50,
                        null=True,
                    ),
                ),
                ("duration", models.DurationField(blank=True, null=True)),
                ("notes", models.TextField(blank=True, null=True)),
                ("activity", models.TextField(blank=True, null=True)),
                ("resolved_date", models.DateTimeField(blank=True, null=True)),
                ("closed_date", models.DateTimeField(blank=True, null=True)),
                ("closure_notes", models.TextField(blank=True, null=True)),
                ("root_cause", models.TextField(blank=True, null=True)),
                (
                    "assignment_to",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="assigned_incidents",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "caller",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="incidents",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "child_incident",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="parent_incidents",
                        to="incident_record.incidentrecord",
                    ),
                ),
                (
                    "closed_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="closed_incidents",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "created_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="created_incidents",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "deleted_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="deleted_incidents",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "parent_incident",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="child_incidents",
                        to="incident_record.incidentrecord",
                    ),
                ),
                (
                    "resolved_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="resolved_incidents",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "updated_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="updated_incidents",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "db_table": "incident_record",
            },
        ),
    ]
